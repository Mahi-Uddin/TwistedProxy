var readPtr = Module.findExportByName('libc.so', 'read');
var connectPtr = Module.findExportByName('libc.so', 'connect');

var read = new NativeFunction(readPtr, 'int', ['int', 'pointer', 'int']);
var connect = new NativeFunction(connectPtr, 'int', ['int', 'pointer', 'int']);

Interceptor.replace(connectPtr,
    new NativeCallback(function(sockfd, serv_addr, addrlen){
        if (addrlen == 16){
            this.serv_addr = Memory.alloc(16)
            Memory.writeByteArray(this.serv_addr, [0x02, 0x00, 0x24, 0x7b, 0xc0, 0xa8, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])

            return connect(sockfd, this.serv_addr, addrlen)
        }
        else {
            return connect(sockfd, serv_addr, addrlen)
        }
    }, 'int', ['int', 'pointer', 'int'])
)

Interceptor.replace(readPtr, 
	new NativeCallback(function(fd, buf, count) {
		// Since the only time the game read 32 bytes on a file
		// is when he generate sk from /dev/urandom we don't have to deal with 
		// file descriptor to be sure 32 bytes are read on /dev/urandom

		if (count == 32) {
			// 32 times 0x00 seems to trigger the game and make it crash
			// so let's use a random value

			Memory.writeByteArray(buf, [0x85, 0x98, 0x0a, 0xb6, 0x07, 0x5c, 0xc1, 0x97,
										0xab, 0x8d, 0xe0, 0xfa, 0xba, 0x3c, 0x69, 0x96,
										0x82, 0xb4, 0x59, 0x97, 0x93, 0x65, 0x43, 0x51,
										0x44, 0x48, 0x2f, 0x5e, 0xba, 0xe8, 0x21, 0x45])

			return 32
		}
		else {
			return read(fd, buf, count)
		}
	}, 'int', ['int', 'pointer', 'int'])
)





























// 00000000:  00 00 00 01 00 4e c6 e7  00 00 00 28 78 6e 74 34   |.....N.....(xnt4|
// 00000010:  34 66 61 6a 32 65 6e 78  68 32 38 6e 65 72 34 6e   |4faj2enxh28ner4n|
// 00000020:  63 6b 72 74 72 63 66 38  70 7a 38 38 6e 6d 6b 37   |ckrtrcf8pz88nmk7|
// 00000030:  79 39 72 64 00 00 00 0c  00 00 00 00 00 00 00 c6   |y9rd............|
// 00000040:  00 00 00 28 33 62 30 65  65 63 64 36 38 64 61 35   |...(3b0eecd68da5|
// 00000050:  35 39 62 30 62 66 35 62  66 30 65 64 34 32 66 35   |59b0bf5bf0ed42f5|
// 00000060:  66 34 39 38 33 36 38 61  30 66 37 66 00 00 00 00   |f498368a0f7f....|
// 00000070:  00 00 00 0f 35 66 36 31  34 38 38 63 36 34 39 31   |....5f61488c6491|
// 00000080:  35 38 65 ff ff ff ff 00  00 00 02 50 36 01 00 00   |58e........P6...|
// 00000090:  00 00 05 65 6e 2d 55 53  00 00 00 24 62 30 62 64   |...en-US...$b0bd|
// 000000A0:  33 64 66 39 2d 34 61 30  39 2d 34 32 33 39 2d 39   |3df9-4a09-4239-9|
// 000000B0:  65 63 34 2d 35 31 64 33  62 31 37 32 63 64 33 33   |ec4-51d3b172cd33|
// 000000C0:  00 00 00 03 35 2e 30 01  00 00 00 00 00 00 00 0f   |....5.0.........|
// 000000D0:  35 66 36 31 34 38 38 63  36 34 39 31 35 38 65 00   |5f61488c649158e.|
// 000000E0:  00 00 00 01 00 00 00 00  00 00 05 a8 02 00 00 00   |................|
// 000000F0:  00 00 00 00 00 00 00 00  06 31 32 2e 31 39 38 00   |.........12.198.|
// 00000100:  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
// 00000110:  00 00 00 00 00 00 00 0c  00 00 00 00 78 9c 03 00   |............x...|
// 00000120:  00 00 00 01                                        |....|

// 00000000:  00 00 00 01 00 4e c6 e7  00 00 00 28 78 6e 74 34   |.....N.....(xnt4|
// 00000010:  34 66 61 6a 32 65 6e 78  68 32 38 6e 65 72 34 6e   |4faj2enxh28ner4n|
// 00000020:  63 6b 72 74 72 63 66 38  70 7a 38 38 6e 6d 6b 37   |ckrtrcf8pz88nmk7|
// 00000030:  79 39 72 64 00 00 00 0c  00 00 00 00 00 00 00 c6   |y9rd............|
// 00000040:  00 00 00 28 33 62 30 65  65 63 64 36 38 64 61 35   |...(3b0eecd68da5|
// 00000050:  35 39 62 30 62 66 35 62  66 30 65 64 34 32 66 35   |59b0bf5bf0ed42f5|
// 00000060:  66 34 39 38 33 36 38 61  30 66 37 66 00 00 00 00   |f498368a0f7f....|
// 00000070:  00 00 00 0f 35 66 36 31  34 38 38 63 36 34 39 31   |....5f61488c6491|
// 00000080:  35 38 65 ff ff ff ff 00  00 00 02 50 36 01 00 00   |58e........P6...|
// 00000090:  00 00 05 65 6e 2d 55 53  00 00 00 24 62 30 62 64   |...en-US...$b0bd|
// 000000A0:  33 64 66 39 2d 34 61 30  39 2d 34 32 33 39 2d 39   |3df9-4a09-4239-9|
// 000000B0:  65 63 34 2d 35 31 64 33  62 31 37 32 63 64 33 33   |ec4-51d3b172cd33|
// 000000C0:  00 00 00 03 35 2e 30 01  00 00 00 00 00 00 00 0f   |....5.0.........|
// 000000D0:  35 66 36 31 34 38 38 63  36 34 39 31 35 38 65 00   |5f61488c649158e.|
// 000000E0:  00 00 00 01 00 00 00 00  00 00 05 a8 02 00 00 00   |................|
// 000000F0:  00 00 00 00 00 00 00 00  06 31 32 2e 31 39 38 00   |.........12.198.|
// 00000100:  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
// 00000110:  00 00 00 00 00 00 00 0c  00 00 00 00 78 9c 03 00   |............x...|
// 00000120:  00 00 00 01                                        |....|
	



// 00 00 00 01 00 4e bb 7c  00 00 00 28 6b 79 39 74   |.....N.|...(ky9t|
// 6e 68 70 37 34 36 68 32  61 33 32 36 37 66 34 78   |nhp746h2a3267f4x|
// 33 72 62 33 72 67 63 6a  67 7a 67 64 63 6e 61 61   |3rb3rgcjgzgdcnaa|
// 6b 6e 77 61 00 00 00 0c  00 00 00 00 00 00 00 c6   |knwa............|
// 00 00 00 28 33 62 30 65  65 63 64 36 38 64 61 35   |...(3b0eecd68da5|
// 35 39 62 30 62 66 35 62  66 30 65 64 34 32 66 35   |59b0bf5bf0ed42f5|
// 66 34 39 38 33 36 38 61  30 66 37 66 00 00 00 00   |f498368a0f7f....|
// 00 00 00 0f 35 66 36 31  34 38 38 63 36 34 39 31   |....5f61488c6491|
// 35 38 65 ff ff ff ff 00  00 00 02 50 36 01 00 00   |58e........P6...|
// 00 00 05 65 6e 2d 55 53  00 00 00 24 62 30 62 64   |...en-US...$b0bd|
// 33 64 66 39 2d 34 61 30  39 2d 34 32 33 39 2d 39   |3df9-4a09-4239-9|
// 65 63 34 2d 35 31 64 33  62 31 37 32 63 64 33 33   |ec4-51d3b172cd33|
// 00 00 00 03 35 2e 30 01  00 00 00 00 00 00 00 0f   |....5.0.........|
// 35 66 36 31 34 38 38 63  36 34 39 31 35 38 65 00   |5f61488c649158e.|
// 00 00 00 01 00 00 00 00  00 00 05 a8 02 00 00 00   |................|
// 00 00 00 00 00 00 00 00  06 31 32 2e 31 39 38 00   |.........12.198.|
// 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
// 00 00 00 00 00 00 00 0c  00 00 00 00 78 9c 03 00   |............x...|
// 00 00 00 01 
